<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:mvc="http://www.springframework.org/schema/mvc" xmlns:widget="http://www.opensourceforce.org/schema/widget"
	xmlns:task="http://www.springframework.org/schema/task" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:jdbc="http://www.springframework.org/schema/jdbc" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:p="http://www.springframework.org/schema/p"
	xsi:schemaLocation="
     http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd
     http://www.opensourceforce.org/schema/widget http://www.opensourceforce.org/schema/widget/spring-widget-0.2.0.xsd
     http://www.springframework.org/schema/task http://www.springframework.org/schema/task/spring-task-3.2.xsd
     http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.2.xsd
     http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
     http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc-3.2.xsd
     http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.2.xsd
     http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.2.xsd">

	<!-- import resource="classpath:com/honghe/ebbtide/META-INF/ebbtideContext.xml" 
		/ -->


	<bean id="localeResolver"
		class="org.springframework.web.servlet.i18n.CookieLocaleResolver">
		<property name="cookieName" value="language" />
		<property name="cookieMaxAge" value="3600" />
		<!-- <property name="defaultLocale" value="zh_CN" /> -->
	</bean>

	<bean id="messageSource"
		class="org.springframework.context.support.ReloadableResourceBundleMessageSource"
		p:fallbackToSystemLocale="true" p:useCodeAsDefaultMessage="true"
		p:defaultEncoding="UTF-8" p:cacheSeconds="60">
		<description>Base message source to handle internationalization
		</description>
		<property name="basenames">
			<list>
				<!-- main resources -->
				<value>classpath:error</value>
			</list>
		</property>
	</bean>

	<!-- <bean class="org.springframework.web.servlet.mvc.annotation.DefaultAnnotationHandlerMapping"> 
		<property name="order" value="0" /> </bean> <bean id="validator" class="org.springframework.validation.beanvalidation.LocalValidatorFactoryBean" 
		p:validationMessageSource-ref="messageSource" /> <bean id="conversion-service" 
		class="org.springframework.format.support.FormattingConversionServiceFactoryBean" 
		/> <bean class="org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter"> 
		<property name="webBindingInitializer"> <bean class="org.springframework.web.bind.support.ConfigurableWebBindingInitializer"> 
		<property name="validator" ref="validator" /> <property name="conversionService" 
		ref="conversion-service" /> </bean> </property> <property name="messageConverters"> 
		<list> <bean class="org.springframework.http.converter.ByteArrayHttpMessageConverter" 
		/> <bean class="org.springframework.http.converter.StringHttpMessageConverter" 
		/> <bean class="org.springframework.http.converter.FormHttpMessageConverter" 
		/> <bean class="org.springframework.http.converter.xml.SourceHttpMessageConverter" 
		/> <bean class="org.springframework.http.converter.json.MappingJacksonHttpMessageConverter" 
		/> </list> </property> </bean> -->

	<bean id="validator"
		class="org.springframework.validation.beanvalidation.LocalValidatorFactoryBean"
		p:validationMessageSource-ref="messageSource" />
	<mvc:annotation-driven validator="validator" />

	<!-- enable autowire -->
	<!-- <context:annotation-config /> -->

	<aop:aspectj-autoproxy />

	<task:annotation-driven />

	<!-- enable component scanning (beware that this does not enable mapper 
		scanning!) -->
	<context:component-scan base-package="com.ecpss.mp">
		<context:exclude-filter type="regex"
			expression="com.ecpss.mp.entity.*" />
	</context:component-scan>

	<bean
		class="org.springframework.validation.beanvalidation.MethodValidationPostProcessor" />

	<mvc:interceptors>
		<bean class="org.springframework.web.servlet.i18n.LocaleChangeInterceptor" />
		<!-- <bean class="com.ecpss.bocpos.interceptor.HttpPackagesLoggingInterceptor" 
			/> -->

		<!-- <bean class="com.ecpss.bocpos.interceptor.AppAuthInterceptor"> <property 
			name="systemService"><ref bean="systemService" /></property> <property name="actions"> 
			<map> <entry key="/control/trade/importTransactionsFiles" value="false"/> 
			<entry key="/merchant/uc/register" value="false"/> </map> </property> </bean> -->
	</mvc:interceptors>

	<mvc:resources location="/images/" mapping="/images/**" />
	<mvc:resources location="/css/" mapping="/css/**" />
	<mvc:resources location="/scripts/" mapping="/scripts/**" />
	<mvc:resources location="/flash/" mapping="/flash/**" />
	<mvc:resources location="/*.ico" mapping="/*.ico" />
	<mvc:resources location="/test.html" mapping="/test.html" />

	<bean id="tilesConfigurer"
		class="org.springframework.web.servlet.view.tiles3.TilesConfigurer">
		<property name="definitions">
			<list>
				<value>/WEB-INF/tiles.xml</value>
			</list>
		</property>
	</bean>

	<!-- <bean id="viewResolver" class="org.springframework.web.servlet.view.InternalResourceViewResolver"> 
		<property name="viewClass" value="org.springframework.web.servlet.view.JstlView"/> 
		<property name="prefix" value="/page/"/> <property name="suffix" value=".jsp"/> 
		</bean> -->


	<bean id="viewResolver"
		class="org.springframework.web.servlet.view.tiles3.TilesViewResolver">
		<property name="viewClass"
			value="org.springframework.web.servlet.view.tiles3.TilesView" />
	</bean>


	<!-- Multipart Resolver -->
	<bean id="multipartResolver"
		class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
		<property name="maxUploadSize" value="-1" />
	</bean>

	<bean id="taskExecutor"
		class="org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor"
		scope="singleton">
		<property name="corePoolSize" value="5" />
		<property name="maxPoolSize" value="200" />
		<property name="queueCapacity" value="200" />
	</bean>

	<bean id="timerTaskExecutor" class="org.springframework.scheduling.timer.TimerTaskExecutor"
		scope="singleton">
		<property name="delay" value="10000" />
	</bean>


	<!-- Configurer that replaces ${...} placeholders with values from a properties 
		file -->
	<!-- (in this case, JDBC-related settings for the dataSource definition 
		below) -->
	<!-- bean id="propertyConfigurer" class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer"> 
		<property name="location" value="/WEB-INF/jdbc.properties" /> </bean -->
	<context:property-placeholder location="/WEB-INF/jdbc.properties" />


	<!-- Local DataSource that works in any environment -->
	<!-- Note that DriverManagerDataSource does not pool; it is not intended 
		for production -->
	<!-- See JPetStore for an example of using Commons DBCP BasicDataSource 
		as alternative -->
	<!-- See Image Database for an example of using C3P0 ComboPooledDataSource 
		as alternative -->
	<bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource"
		scope="singleton">
		<property name="driverClassName" value="${jdbc.driverClassName}" />
		<property name="url" value="${jdbc.url}" />
		<property name="username" value="${jdbc.username}" />
		<property name="password" value="${jdbc.password}" />
		<property name="maxActive" value="${jdbc.maxActive}" />
		<property name="initialSize" value="${jdbc.initialSize}" />
		<property name="validationQuery" value="select 1" />
		<property name="testWhileIdle" value="true" />
		<property name="minEvictableIdleTimeMillis" value="1800000" />
	</bean>

	<bean id="persistenceUnitManager"
		class="org.springframework.orm.jpa.persistenceunit.DefaultPersistenceUnitManager">
		<property name="persistenceXmlLocations">
			<list>
				<!--value>org/springframework/orm/jpa/domain/persistence-multi.xml</value> 
					<value>classpath:/my/package/**/custom-persistence.xml</value -->
				<value>classpath*:META-INF/persistence.xml</value>
			</list>
		</property>
		<!-- if no datasource is specified, use this one -->
		<property name="defaultDataSource" ref="dataSource" />
	</bean>


	<!-- JPA EntityManagerFactory -->
	<bean id="entityManagerFactory"
		class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">
		<property name="persistenceUnitManager" ref="persistenceUnitManager" />
		<!-- <property name="dataSource" ref="dataSource" /> -->
		<property name="loadTimeWeaver">
			<bean
				class="org.springframework.instrument.classloading.InstrumentationLoadTimeWeaver" />
		</property>
		<property name="jpaVendorAdapter">
			<bean class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter">
				<!-- <property name="databasePlatform" value="org.hibernate.dialect.MySQL5Dialect" 
					/> -->
				<!-- <property name="generateDdl" value="true" /> -->
				<property name="database" value="MYSQL" />
				<property name="showSql" value="true" />
			</bean>
		</property>
	</bean>

	<!-- Transaction manager for a single JPA EntityManagerFactory (alternative 
		to JTA) -->
	<bean id="transactionManager" class="org.springframework.orm.jpa.JpaTransactionManager">
		<property name="entityManagerFactory" ref="entityManagerFactory" />
	</bean>

	<tx:annotation-driven transaction-manager="transactionManager" />

	<bean id="mailSender" class="org.springframework.mail.javamail.JavaMailSenderImpl">
		<property name="host" value="mailhost.mypna.com" />
	</bean>

</beans>
